import React, { useContext, useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { AppContext } from "../App";
import { RiVerifiedBadgeLine } from "react-icons/ri";
import { RiRefund2Fill } from "react-icons/ri";
import { IoMdAddCircleOutline } from "react-icons/io";
import { toast, ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

const ShowDetailProduct = () => {
  const [data, setData] = useState({});
  const [price, setPrice] = useState("");

  const [message, setMessage] = useState("");
  const [actionText, setActionText] = useState("Mua h√†ng");
  const [actionLink, setActionLink] = useState("/");

  const { products } = useContext(AppContext);
  // console.log("üöÄ ~ ShowDetailProduct ~ products:", products);

  const { id } = useParams();
  // console.log(id);

  useEffect(() => {
    const product = products.find((product) => {
      return product.id.toString() === id;
    });
    // console.log("üöÄ ~ useEffect ~ product:", product);
    setData(product);
    setPrice(product.price);
  });
  const formattedPrice = price.toLocaleString("vi-VN", {
    style: "currency",
    currency: "VND",
    minimumFractionDigits: 0,
  });

  const handleAdd = () => {
    const user = localStorage.getItem("loggedInUser");

    if (!user) {
      // Ng∆∞·ªùi d√πng ch∆∞a ƒëƒÉng nh·∫≠p
      setMessage("B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p tr∆∞·ªõc ƒë·ªÉ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng.");
      setActionText("ƒê·∫øn trang ƒëƒÉng nh·∫≠p");
      setActionLink("/login");
    } else {
      // Ng∆∞·ªùi d√πng ƒë√£ ƒëƒÉng nh·∫≠p
      const cartItems = JSON.parse(localStorage.getItem("cart")) || [];
      cartItems.push(data);
      localStorage.setItem("cart", JSON.stringify(cartItems));
      toast.success("S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c th√™m v√†o gi·ªè h√†ng.");

      setMessage("S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c th√™m v√†o gi·ªè h√†ng th√†nh c√¥ng!");
      setActionText("Ti·∫øp t·ª•c mua h√†ng");
      setActionLink("/");
    }
  };

  const handleAction = () => {
    window.location.href = actionLink; // ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn trang d·ª±a tr√™n actionLink
};

  return (
    <div id="showDetail">
      <h1>{data.name}</h1>
      <br />
      <hr />
      <div id="main">
        <div className="cartImg">
          <img src={data.img} />
        </div>
        <div className="addToCart">
          <div>
            <h3>{formattedPrice}</h3>
            <div>{data.category}</div>
          </div>
          <div>
            <div className="policy">
              <RiVerifiedBadgeLine />
              <p>B·∫£o h√†nh ch√≠nh h√£ng.</p>
            </div>
            <div className="policy">
              <RiRefund2Fill />
              <p>1 ƒë·ªïi 1 n·∫øu l·ªói, ƒë·ªïi s·∫£n ph·∫©m t·∫°i nh√† trong 1 ng√†y.</p>
            </div>
          </div>
          <button onClick={handleAdd}>
            <div>
              <IoMdAddCircleOutline />
              <strong>
                <p>Th√™m v√†o gi·ªè h√†ng</p>
              </strong>
            </div>
            <p>Giao trong 1 gi·ªù ho·∫∑c nh·∫≠n t·∫°i c·ª≠a h√†ng</p>
          </button>
          {message && (
            <div>
              <div className="message">{message}</div>
              <button className="button" onClick={handleAction}>
                {actionText}
              </button>
            </div>
          )}
        </div>
        <div className="moTa">
          <h2>Th√¥ng tin s·∫£n ph·∫©m</h2>
          <ul className="info">
            <li>
              <p>Th√¥ng tin</p>
              <div>Bia Budweiser</div>
            </li>
            <li>
              <p>Xu·∫•t x·ª©</p>
              <div>B·ªâ</div>
            </li>
          </ul>
        </div>
      </div>
      <ToastContainer />
    </div>
  );
};

export default ShowDetailProduct;
